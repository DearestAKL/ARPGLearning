
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace cfg.armorLevelAttribute
{
public partial class TbArmorLevelAttribute
{
    private readonly System.Collections.Generic.List<ArmorLevelAttribute> _dataList;

    private System.Collections.Generic.Dictionary<(int, int), ArmorLevelAttribute> _dataMapUnion;

    public TbArmorLevelAttribute(ByteBuf _buf)
    {
        _dataList = new System.Collections.Generic.List<ArmorLevelAttribute>();
        
        for(int n = _buf.ReadSize() ; n > 0 ; --n)
        {
            ArmorLevelAttribute _v;
            _v = ArmorLevelAttribute.DeserializeArmorLevelAttribute(_buf);
            _dataList.Add(_v);
        }
        _dataMapUnion = new System.Collections.Generic.Dictionary<(int, int), ArmorLevelAttribute>();
        foreach(var _v in _dataList)
        {
            _dataMapUnion.Add((_v.Quality, _v.Level), _v);
        }
    }

    public System.Collections.Generic.List<ArmorLevelAttribute> DataList => _dataList;

    public ArmorLevelAttribute Get(int quality, int level) => _dataMapUnion.TryGetValue((quality, level), out ArmorLevelAttribute __v) ? __v : null;
    
    public void ResolveRef(Tables tables)
    {
        foreach(var _v in _dataList)
        {
            _v.ResolveRef(tables);
        }
    }
}

}
