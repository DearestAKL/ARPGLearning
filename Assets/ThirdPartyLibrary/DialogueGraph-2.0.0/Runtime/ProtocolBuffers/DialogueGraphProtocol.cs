// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuf/DialogueGraphProtocol.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace DialogueGraph.Runtime {

  /// <summary>Holder for reflection information generated from Protobuf/DialogueGraphProtocol.proto</summary>
  public static partial class DialogueGraphProtocolReflection {

    #region Descriptor
    /// <summary>File descriptor for Protobuf/DialogueGraphProtocol.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DialogueGraphProtocolReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiRQcm90b2J1Zi9EaWFsb2d1ZUdyYXBoUHJvdG9jb2wucHJvdG8SBkJhdHRs",
            "ZSJxCgtEbG9nTWVzc2FnZRIiCgVub2RlcxgBIAMoCzITLkJhdHRsZS5Ob2Rl",
            "TWVzc2FnZRIrCgpwcm9wZXJ0aWVzGAIgAygLMhcuQmF0dGxlLlByb3BlcnR5",
            "TWVzc2FnZRIRCglzdGFydE5vZGUYAyABKAUiXQoLTm9kZU1lc3NhZ2USDAoE",
            "dHlwZRgBIAEoBRIuCgVMaW5lcxgCIAMoCzIfLkJhdHRsZS5Db252ZXJzYXRp",
            "b25MaW5lTWVzc2FnZRIQCghjdXJBY3RvchgDIAEoBSIyCg9Qcm9wZXJ0eU1l",
            "c3NhZ2USDAoEdHlwZRgBIAEoBRIRCglyZWZlcmVuY2UYAiABKAkifAoXQ29u",
            "dmVyc2F0aW9uTGluZU1lc3NhZ2USDwoHbWVzc2FnZRgBIAEoCRIQCghuZXh0",
            "Tm9kZRgCIAEoBRIQCgh0cmlnZ2VycxgDIAMoBRIsCgpjaGVja1RyZWVzGAQg",
            "AygLMhguQmF0dGxlLkNoZWNrVHJlZU1lc3NhZ2UimQEKEENoZWNrVHJlZU1l",
            "c3NhZ2USGAoQYm9vbGVhbk9wZXJhdGlvbhgBIAEoBRITCgtjdXJQcm9wZXJ0",
            "eRgCIAEoBRIqCghzdWJ0cmVlQRgDIAEoCzIYLkJhdHRsZS5DaGVja1RyZWVN",
            "ZXNzYWdlEioKCHN1YnRyZWVCGAQgASgLMhguQmF0dGxlLkNoZWNrVHJlZU1l",
            "c3NhZ2VCGKoCFURpYWxvZ3VlR3JhcGguUnVudGltZWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::DialogueGraph.Runtime.DlogMessage), global::DialogueGraph.Runtime.DlogMessage.Parser, new[]{ "Nodes", "Properties", "StartNode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DialogueGraph.Runtime.NodeMessage), global::DialogueGraph.Runtime.NodeMessage.Parser, new[]{ "Type", "Lines", "CurActor" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DialogueGraph.Runtime.PropertyMessage), global::DialogueGraph.Runtime.PropertyMessage.Parser, new[]{ "Type", "Reference" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DialogueGraph.Runtime.ConversationLineMessage), global::DialogueGraph.Runtime.ConversationLineMessage.Parser, new[]{ "Message", "NextNode", "Triggers", "CheckTrees" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DialogueGraph.Runtime.CheckTreeMessage), global::DialogueGraph.Runtime.CheckTreeMessage.Parser, new[]{ "BooleanOperation", "CurProperty", "SubtreeA", "SubtreeB" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DlogMessage : pb::IMessage<DlogMessage> {
    private static readonly pb::MessageParser<DlogMessage> _parser = new pb::MessageParser<DlogMessage>(() => new DlogMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DlogMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DialogueGraph.Runtime.DialogueGraphProtocolReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DlogMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DlogMessage(DlogMessage other) : this() {
      nodes_ = other.nodes_.Clone();
      properties_ = other.properties_.Clone();
      startNode_ = other.startNode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DlogMessage Clone() {
      return new DlogMessage(this);
    }

    /// <summary>Field number for the "nodes" field.</summary>
    public const int NodesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::DialogueGraph.Runtime.NodeMessage> _repeated_nodes_codec
        = pb::FieldCodec.ForMessage(10, global::DialogueGraph.Runtime.NodeMessage.Parser);
    private readonly pbc::RepeatedField<global::DialogueGraph.Runtime.NodeMessage> nodes_ = new pbc::RepeatedField<global::DialogueGraph.Runtime.NodeMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DialogueGraph.Runtime.NodeMessage> Nodes {
      get { return nodes_; }
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::DialogueGraph.Runtime.PropertyMessage> _repeated_properties_codec
        = pb::FieldCodec.ForMessage(18, global::DialogueGraph.Runtime.PropertyMessage.Parser);
    private readonly pbc::RepeatedField<global::DialogueGraph.Runtime.PropertyMessage> properties_ = new pbc::RepeatedField<global::DialogueGraph.Runtime.PropertyMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DialogueGraph.Runtime.PropertyMessage> Properties {
      get { return properties_; }
    }

    /// <summary>Field number for the "startNode" field.</summary>
    public const int StartNodeFieldNumber = 3;
    private int startNode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StartNode {
      get { return startNode_; }
      set {
        startNode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DlogMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DlogMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!nodes_.Equals(other.nodes_)) return false;
      if(!properties_.Equals(other.properties_)) return false;
      if (StartNode != other.StartNode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= nodes_.GetHashCode();
      hash ^= properties_.GetHashCode();
      if (StartNode != 0) hash ^= StartNode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      nodes_.WriteTo(output, _repeated_nodes_codec);
      properties_.WriteTo(output, _repeated_properties_codec);
      if (StartNode != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(StartNode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += nodes_.CalculateSize(_repeated_nodes_codec);
      size += properties_.CalculateSize(_repeated_properties_codec);
      if (StartNode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartNode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DlogMessage other) {
      if (other == null) {
        return;
      }
      nodes_.Add(other.nodes_);
      properties_.Add(other.properties_);
      if (other.StartNode != 0) {
        StartNode = other.StartNode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            nodes_.AddEntriesFrom(input, _repeated_nodes_codec);
            break;
          }
          case 18: {
            properties_.AddEntriesFrom(input, _repeated_properties_codec);
            break;
          }
          case 24: {
            StartNode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NodeMessage : pb::IMessage<NodeMessage> {
    private static readonly pb::MessageParser<NodeMessage> _parser = new pb::MessageParser<NodeMessage>(() => new NodeMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NodeMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DialogueGraph.Runtime.DialogueGraphProtocolReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeMessage(NodeMessage other) : this() {
      type_ = other.type_;
      lines_ = other.lines_.Clone();
      curActor_ = other.curActor_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeMessage Clone() {
      return new NodeMessage(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "Lines" field.</summary>
    public const int LinesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::DialogueGraph.Runtime.ConversationLineMessage> _repeated_lines_codec
        = pb::FieldCodec.ForMessage(18, global::DialogueGraph.Runtime.ConversationLineMessage.Parser);
    private readonly pbc::RepeatedField<global::DialogueGraph.Runtime.ConversationLineMessage> lines_ = new pbc::RepeatedField<global::DialogueGraph.Runtime.ConversationLineMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DialogueGraph.Runtime.ConversationLineMessage> Lines {
      get { return lines_; }
    }

    /// <summary>Field number for the "curActor" field.</summary>
    public const int CurActorFieldNumber = 3;
    private int curActor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurActor {
      get { return curActor_; }
      set {
        curActor_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NodeMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NodeMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if(!lines_.Equals(other.lines_)) return false;
      if (CurActor != other.CurActor) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      hash ^= lines_.GetHashCode();
      if (CurActor != 0) hash ^= CurActor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      lines_.WriteTo(output, _repeated_lines_codec);
      if (CurActor != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CurActor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      size += lines_.CalculateSize(_repeated_lines_codec);
      if (CurActor != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurActor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NodeMessage other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      lines_.Add(other.lines_);
      if (other.CurActor != 0) {
        CurActor = other.CurActor;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            lines_.AddEntriesFrom(input, _repeated_lines_codec);
            break;
          }
          case 24: {
            CurActor = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PropertyMessage : pb::IMessage<PropertyMessage> {
    private static readonly pb::MessageParser<PropertyMessage> _parser = new pb::MessageParser<PropertyMessage>(() => new PropertyMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PropertyMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DialogueGraph.Runtime.DialogueGraphProtocolReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertyMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertyMessage(PropertyMessage other) : this() {
      type_ = other.type_;
      reference_ = other.reference_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertyMessage Clone() {
      return new PropertyMessage(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "reference" field.</summary>
    public const int ReferenceFieldNumber = 2;
    private string reference_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reference {
      get { return reference_; }
      set {
        reference_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PropertyMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PropertyMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Reference != other.Reference) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Reference.Length != 0) hash ^= Reference.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (Reference.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Reference);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (Reference.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reference);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PropertyMessage other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Reference.Length != 0) {
        Reference = other.Reference;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            Reference = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConversationLineMessage : pb::IMessage<ConversationLineMessage> {
    private static readonly pb::MessageParser<ConversationLineMessage> _parser = new pb::MessageParser<ConversationLineMessage>(() => new ConversationLineMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConversationLineMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DialogueGraph.Runtime.DialogueGraphProtocolReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConversationLineMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConversationLineMessage(ConversationLineMessage other) : this() {
      message_ = other.message_;
      nextNode_ = other.nextNode_;
      triggers_ = other.triggers_.Clone();
      checkTrees_ = other.checkTrees_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConversationLineMessage Clone() {
      return new ConversationLineMessage(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    /// <summary>
    /// 内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nextNode" field.</summary>
    public const int NextNodeFieldNumber = 2;
    private int nextNode_;
    /// <summary>
    /// 下一个节点id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NextNode {
      get { return nextNode_; }
      set {
        nextNode_ = value;
      }
    }

    /// <summary>Field number for the "triggers" field.</summary>
    public const int TriggersFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_triggers_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> triggers_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 触发事件
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Triggers {
      get { return triggers_; }
    }

    /// <summary>Field number for the "checkTrees" field.</summary>
    public const int CheckTreesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::DialogueGraph.Runtime.CheckTreeMessage> _repeated_checkTrees_codec
        = pb::FieldCodec.ForMessage(34, global::DialogueGraph.Runtime.CheckTreeMessage.Parser);
    private readonly pbc::RepeatedField<global::DialogueGraph.Runtime.CheckTreeMessage> checkTrees_ = new pbc::RepeatedField<global::DialogueGraph.Runtime.CheckTreeMessage>();
    /// <summary>
    /// 条件树
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DialogueGraph.Runtime.CheckTreeMessage> CheckTrees {
      get { return checkTrees_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConversationLineMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConversationLineMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      if (NextNode != other.NextNode) return false;
      if(!triggers_.Equals(other.triggers_)) return false;
      if(!checkTrees_.Equals(other.checkTrees_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (NextNode != 0) hash ^= NextNode.GetHashCode();
      hash ^= triggers_.GetHashCode();
      hash ^= checkTrees_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (NextNode != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NextNode);
      }
      triggers_.WriteTo(output, _repeated_triggers_codec);
      checkTrees_.WriteTo(output, _repeated_checkTrees_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (NextNode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NextNode);
      }
      size += triggers_.CalculateSize(_repeated_triggers_codec);
      size += checkTrees_.CalculateSize(_repeated_checkTrees_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConversationLineMessage other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.NextNode != 0) {
        NextNode = other.NextNode;
      }
      triggers_.Add(other.triggers_);
      checkTrees_.Add(other.checkTrees_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
          case 16: {
            NextNode = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            triggers_.AddEntriesFrom(input, _repeated_triggers_codec);
            break;
          }
          case 34: {
            checkTrees_.AddEntriesFrom(input, _repeated_checkTrees_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CheckTreeMessage : pb::IMessage<CheckTreeMessage> {
    private static readonly pb::MessageParser<CheckTreeMessage> _parser = new pb::MessageParser<CheckTreeMessage>(() => new CheckTreeMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckTreeMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DialogueGraph.Runtime.DialogueGraphProtocolReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckTreeMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckTreeMessage(CheckTreeMessage other) : this() {
      booleanOperation_ = other.booleanOperation_;
      curProperty_ = other.curProperty_;
      subtreeA_ = other.subtreeA_ != null ? other.subtreeA_.Clone() : null;
      subtreeB_ = other.subtreeB_ != null ? other.subtreeB_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckTreeMessage Clone() {
      return new CheckTreeMessage(this);
    }

    /// <summary>Field number for the "booleanOperation" field.</summary>
    public const int BooleanOperationFieldNumber = 1;
    private int booleanOperation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BooleanOperation {
      get { return booleanOperation_; }
      set {
        booleanOperation_ = value;
      }
    }

    /// <summary>Field number for the "curProperty" field.</summary>
    public const int CurPropertyFieldNumber = 2;
    private int curProperty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurProperty {
      get { return curProperty_; }
      set {
        curProperty_ = value;
      }
    }

    /// <summary>Field number for the "subtreeA" field.</summary>
    public const int SubtreeAFieldNumber = 3;
    private global::DialogueGraph.Runtime.CheckTreeMessage subtreeA_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DialogueGraph.Runtime.CheckTreeMessage SubtreeA {
      get { return subtreeA_; }
      set {
        subtreeA_ = value;
      }
    }

    /// <summary>Field number for the "subtreeB" field.</summary>
    public const int SubtreeBFieldNumber = 4;
    private global::DialogueGraph.Runtime.CheckTreeMessage subtreeB_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DialogueGraph.Runtime.CheckTreeMessage SubtreeB {
      get { return subtreeB_; }
      set {
        subtreeB_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckTreeMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckTreeMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BooleanOperation != other.BooleanOperation) return false;
      if (CurProperty != other.CurProperty) return false;
      if (!object.Equals(SubtreeA, other.SubtreeA)) return false;
      if (!object.Equals(SubtreeB, other.SubtreeB)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BooleanOperation != 0) hash ^= BooleanOperation.GetHashCode();
      if (CurProperty != 0) hash ^= CurProperty.GetHashCode();
      if (subtreeA_ != null) hash ^= SubtreeA.GetHashCode();
      if (subtreeB_ != null) hash ^= SubtreeB.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BooleanOperation != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BooleanOperation);
      }
      if (CurProperty != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurProperty);
      }
      if (subtreeA_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SubtreeA);
      }
      if (subtreeB_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(SubtreeB);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BooleanOperation != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BooleanOperation);
      }
      if (CurProperty != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurProperty);
      }
      if (subtreeA_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubtreeA);
      }
      if (subtreeB_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubtreeB);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckTreeMessage other) {
      if (other == null) {
        return;
      }
      if (other.BooleanOperation != 0) {
        BooleanOperation = other.BooleanOperation;
      }
      if (other.CurProperty != 0) {
        CurProperty = other.CurProperty;
      }
      if (other.subtreeA_ != null) {
        if (subtreeA_ == null) {
          SubtreeA = new global::DialogueGraph.Runtime.CheckTreeMessage();
        }
        SubtreeA.MergeFrom(other.SubtreeA);
      }
      if (other.subtreeB_ != null) {
        if (subtreeB_ == null) {
          SubtreeB = new global::DialogueGraph.Runtime.CheckTreeMessage();
        }
        SubtreeB.MergeFrom(other.SubtreeB);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BooleanOperation = input.ReadInt32();
            break;
          }
          case 16: {
            CurProperty = input.ReadInt32();
            break;
          }
          case 26: {
            if (subtreeA_ == null) {
              SubtreeA = new global::DialogueGraph.Runtime.CheckTreeMessage();
            }
            input.ReadMessage(SubtreeA);
            break;
          }
          case 34: {
            if (subtreeB_ == null) {
              SubtreeB = new global::DialogueGraph.Runtime.CheckTreeMessage();
            }
            input.ReadMessage(SubtreeB);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
